
record(bi, "$(D):PwrState-Sts"){
    field(DESC, "Enable/Disable output voltage")
    field(PHAS, "0")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(PRIO, "HIGH")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getInt(getSysOutVoltEnable) $(P)")
}
record(bo, "$(D):PwrState-Sel"){
    field(PINI, "NO")
    field(DESC, "Enable/Disable output voltage")
    field(PHAS, "0")
    field(ZNAM, "Disable")
    field(ONAM, "Enable")
    field(PRIO, "HIGH")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setInt(setSysOutVoltEnable) $(P)")
    field(FLNK, "$(D):PwrState-Sts")
}
record(bi, "$(D):PwrState_proc"){
    field(SCAN, "60 second")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(D):PwrState-Sts")
}

record(ai, "$(D):SysCurrentRef-RB"){
    field(DESC, "Reference val. for current")
    field(EGU,  "A")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSysCurrentRef) $(P)")
}
record(ao, "$(D):SysCurrentRef-SP"){
    field(PINI, "NO")
    field(DESC, "Reference val. for current")
    field(EGU,  "A")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSysCurrentRef) $(P)")
    field(FLNK, "$(D):SysCurrentRef-RB")
}
record(bi, "$(D):SysCurrentRef_proc"){
    field(SCAN, "60 second")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(D):SysCurrentRef-RB")
}

record(ai, "$(D):SysResistanceRef-RB"){
    field(DESC, "Reference val. for resistance")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSysResistanceRef) $(P)")
}
record(ao, "$(D):SysResistanceRef-SP"){
    field(PINI, "NO")
    field(DESC, "Reference val. for resistance")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSysResistanceRef) $(P)")
    field(FLNK, "$(D):SysResistanceRef-RB")
}
record(bi, "$(D):SysResistanceRef_proc"){
    field(SCAN, "60 second")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(D):SysResistanceRef-RB")
}

record(ai, "$(D):SysPwrRef-RB"){
    field(DESC, "Reference val. for power")
    field(EGU,  "kW")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSysPowerRef) $(P)")
}
record(ao, "$(D):SysPwrRef-SP"){
    field(PINI, "NO")
    field(DESC, "Reference val. for power")
    field(EGU,  "kW")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSysPowerRef) $(P)")
    field(FLNK, "$(D):SysPwrRef-RB")
}
record(bi, "$(D):SysPwrRef_proc"){
    field(SCAN, "60 second")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(D):SysPwrRef-RB")
}

record(bi, "$(D):SysVoltSlopeWf-Mon_proc"){
    field(SCAN, "60 second")
    field(PHAS, "0")
    field(PRIO, "LOW")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(D):SysVoltSlopeWf-Mon")
}

record(waveform, "$(D):SysVoltSlopeWf-Mon"){
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getArray(getSlopeVolt) $(P)")
    field(FTVL, "DOUBLE")
    field(NELM, "4")
    field(PRIO, "HIGH")
}

record(longin, "$(D):SysStartupVoltSlopeRaw-RB"){
    field(SCAN, "Passive")
    field(INP,  "$(D):SysVoltSlopeWf-Mon.VAL[0] CP MSS")
    field(DESC, "Set values when enabling output volt")
    field(DTYP, "Soft Channel")
    field(EGU, "units")
}

record(longin, "$(D):SysVoltSlopeRaw-RB"){
    field(SCAN, "Passive")
    field(INP,  "$(D):SysVoltSlopeWf-Mon.VAL[1] CP MSS")
    field(DESC, "Set values when they are changed")
    field(DTYP, "Soft Channel")
    field(EGU, "units")
}

record(ai, "$(D):SysStartupVoltSlope-RB"){
    field(SCAN, "Passive")
    field(DESC, "Set values when enabling output volt")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):SysVoltSlopeWf-Mon.VAL[2] CP MSS")
}

record(ai, "$(D):SysVoltSlope-RB"){
    field(SCAN, "Passive")
    field(DESC, "Set values when they are changed")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):SysVoltSlopeWf-Mon.VAL[3] CP MSS")
}

record(ai, "$(D):SysSlopeVoltMax-Mon"){
    field(PINI, "NO")
    field(SCAN, "30 second")
    field(DESC, "Voltage slope max")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeVoltMax) $(P)")
}

record(ai, "$(D):SysSlopeVoltMin-Mon"){
    field(PINI, "NO")
    field(SCAN, "30 second")
    field(DESC, "Voltage slope min")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeVoltMin) $(P)")
}

record(ao, "$(D):SysStartupVoltSlope-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when enabling output volt")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSlopeStartupVoltMs) $(P)")
    field(FLNK, "$(D):SysStartupVoltSlope-SP_")
}

record(ai, "$(D):SysStartupVoltSlope-SP_"){
    field(PINI, "NO")
    field(SCAN, ".5 second")
    field(DESC, "Actual setpoint to be sent")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeStartupVoltSp) $(P)")
}

record(ao, "$(D):SysVoltSlope-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when they are changed")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSlopeVoltMs) $(P)")
    field(FLNK, "")
}

record(ai, "$(D):SysVoltSlope-SP_"){
    field(PINI, "NO")
    field(SCAN, ".5 second")
    field(DESC, "Actual setpoint to be sent")
    field(EGU,  "V/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeVoltSp) $(P)")
}

record(longout, "$(D):SysStartupVoltSlopeRaw-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when enabling output volt")
    field(EGU,  "units")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DRVH, "32000")
    field(DRVL, "1")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setInt(setSlopeStartupVoltRaw) $(P)")
    field(FLNK, "")
}

record(longout, "$(D):SysVoltSlopeRaw-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when they are changed")
    field(EGU,  "units")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DRVH, "32000")
    field(DRVL, "1")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setInt(setSlopeVoltRaw) $(P)")
    field(FLNK, "")
}

record(bo, "$(D):SysWriteVoltSlope-Cmd"){
    field(DESC, "Apply voltage slope settings")
    field(ONAM, "")
    field(ZNAM, "")
    field(DISA, "1")
    field(DISV, "0")
    field(PRIO, "HIGH")
    field(DISS, "INVALID")
    field(FLNK, "$(D):SysVoltSlopeWf-Mon")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto cmd(cmdSlopeVoltWrite) $(P)")
}

record(bi, "$(D):SysCurrSlopeWf-Mon_proc"){
    field(SCAN, "60 second")
    field(PHAS, "0")
    field(PRIO, "LOW")
    field(DTYP, "Soft Channel")
    field(FLNK, "$(D):SysCurrSlopeWf-Mon")
}

record(waveform, "$(D):SysCurrSlopeWf-Mon"){
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getArray(getSlopeCurrent) $(P)")
    field(FTVL, "DOUBLE")
    field(NELM, "4")
    field(PRIO, "HIGH")
}

record(longin, "$(D):SysStartupCurrSlopeRaw-RB"){
    field(SCAN, "Passive")
    field(INP,  "$(D):SysCurrSlopeWf-Mon.VAL[0] CP MSS")
    field(DESC, "Set values when enabling output volt")
    field(DTYP, "Soft Channel")
    field(EGU, "units")
}

record(longin, "$(D):SysCurrSlopeRaw-RB"){
    field(SCAN, "Passive")
    field(INP,  "$(D):SysCurrSlopeWf-Mon.VAL[1] CP MSS")
    field(DESC, "Set values when they are changed")
    field(DTYP, "Soft Channel")
    field(EGU, "units")
}

record(ai, "$(D):SysStartupCurrSlope-RB"){
    field(SCAN, "Passive")
    field(DESC, "Set values when enabling output volt")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):SysCurrSlopeWf-Mon.VAL[2] CP MSS")
}

record(ai, "$(D):SysCurrSlope-RB"){
    field(SCAN, "Passive")
    field(DESC, "Set values when they are changed")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):SysCurrSlopeWf-Mon.VAL[3] CP MSS")
}

record(ai, "$(D):SysSlopeCurrMax-Mon"){
    field(PINI, "NO")
    field(SCAN, "30 second")
    field(DESC, "Current slope max")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeCurrentMax) $(P)")
}

record(ai, "$(D):SysSlopeCurrMin-Mon"){
    field(PINI, "NO")
    field(SCAN, "30 second")
    field(DESC, "Current slope min")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeCurrentMin) $(P)")
}

record(ao, "$(D):SysStartupCurrSlope-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when enabling output current")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSlopeStartupCurrentMs) $(P)")
    field(FLNK, "$(D):SysStartupCurrSlope-SP_")
}

record(ai, "$(D):SysStartupCurrSlope-SP_"){
    field(PINI, "NO")
    field(SCAN, ".5 second")
    field(DESC, "Actual setpoint to be sent")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeStartupCurrentSp) $(P)")
}

record(ao, "$(D):SysCurrSlope-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when they are changed")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(PRIO, "HIGH")
    field(DRVH, "0")
    field(DRVL, "0")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setFloat(setSlopeCurrentMs) $(P)")
    field(FLNK, "$(D):SysCurrSlope-SP_")
}

record(ai, "$(D):SysCurrSlope-SP_"){
    field(PINI, "NO")
    field(SCAN, ".5 second")
    field(DESC, "Actual setpoint to be sent")
    field(EGU,  "A/ms")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getSlopeCurrentSp) $(P)")
}

record(longout, "$(D):SysStartupCurrSlopeRaw-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when enabling output current")
    field(EGU,  "units")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DRVH, "32000")
    field(DRVL, "1")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setInt(setSlopeStartupCurrentRaw) $(P)")
    field(FLNK, "")
}

record(longout, "$(D):SysCurrSlopeRaw-SP"){
    field(PINI, "NO")
    field(DESC, "Set values when they are changed")
    field(EGU,  "units")
    field(PHAS, "0")
    field(PRIO, "HIGH")
    field(DRVH, "32000")
    field(DRVL, "1")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto setInt(setSlopeCurrentRaw) $(P)")
    field(FLNK, "")
}

record(bo, "$(D):SysWriteCurrSlope-Cmd"){
    field(DESC, "Apply current slope settings")
    field(ONAM, "")
    field(ZNAM, "")
    field(DISA, "1")
    field(DISV, "0")
    field(PRIO, "HIGH")
    field(DISS, "INVALID")
    field(FLNK, "$(D):SysCurrSlopeWf-Mon")

    field(DTYP, "stream")
    field(OUT,  "@Regatron.proto cmd(cmdSlopeCurrentWrite) $(P)")
}
