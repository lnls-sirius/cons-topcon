
record(waveform, "$(D):ModMinMaxNom-Mon"){
    field(SCAN, "30 second")
    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getArray(getModMinMaxNom) $(P)")
    field(FTVL, "DOUBLE")
    field(NELM, "12")
    field(PRIO, "LOW")
}

record(ai, "$(D):ModMinVolt-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Voltage Min")
    field(EGU,  "V")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[0] CP MSS")
}

record(ai, "$(D):ModMinCurrent-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Current Min")
    field(EGU,  "A")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[1] CP MSS")
}

record(ai, "$(D):ModMinPwr-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Power Min")
    field(EGU,  "kW")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[2] CP MSS")
}

record(ai, "$(D):ModMinRes-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Resistance Min")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[3] CP MSS")
}

record(ai, "$(D):ModMaxVolt-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Voltage Max")
    field(EGU,  "V")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[4] CP MSS")
}

record(ai, "$(D):ModMaxCurrent-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Current Max")
    field(EGU,  "A")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[5] CP MSS")
}

record(ai, "$(D):ModMaxPwr-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Power Max")
    field(EGU,  "kW")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[6] CP MSS")
}

record(ai, "$(D):ModMaxRes-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Resistance Max")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[7] CP MSS")
}

record(ai, "$(D):ModNomVolt-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Voltage Nominal")
    field(EGU,  "V")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[8] CP MSS")
}

record(ai, "$(D):ModNomCurrent-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Current Nominal")
    field(EGU,  "A")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[9] CP MSS")
}

record(ai, "$(D):ModNomPwr-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Power Nominal")
    field(EGU,  "kW")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[10] CP MSS")
}

record(ai, "$(D):ModNomRes-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Resistance Nominal")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMinMaxNom-Mon.VAL[11] CP MSS")
}

record(waveform, "$(D):ModMon"){
    field(SCAN, "5 second")
    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getArray(getModReadings) $(P)")
    field(FTVL, "DOUBLE")
    field(NELM, "5")
    field(PRIO, "LOW")
}

record(ai, "$(D):ModOutVolt-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Module out voltage")
    field(EGU,  "V")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMon.VAL[0] CP MSS")
}

record(ai, "$(D):ModOutCurrent-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Module out current")
    field(EGU,  "A")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMon.VAL[1] CP MSS")
}

record(ai, "$(D):ModOutPwr-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Module out power")
    field(EGU,  "kW")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMon.VAL[2] CP MSS")
}

record(ai, "$(D):ModResPreset-Mon"){
    field(SCAN, "Passive")
    field(DESC, "Module resistence preset")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(DTYP, "Soft Channel")

    field(INP,  "$(D):ModMon.VAL[3] CP MSS")
}

record(mbbi, "$(D):ModState-Mon") {
    field(SCAN, "Passive")
    field(DESC, "Module state")
    field(DTYP, "Soft Channel")

    field(ZRST, "")
    field(ONST, "")
    field(TWST, "POWERUP")
    field(THST, "")
    field(FRST, "READY")
    field(FVST, "")
    field(SXST, "")
    field(SVST, "")
    field(EIST, "RUN")
    field(NIST, "")
    field(TEST, "WARN")
    field(ELST, "")
    field(TVST, "ERROR")
    field(TTST, "")
    field(FTST, "STOP")
    field(FFST, "")

    field(ZRSV, "")
    field(ONSV, "")
    field(TWSV, "")
    field(THSV, "")
    field(FRSV, "")
    field(FVSV, "")
    field(SXSV, "")
    field(SVSV, "")
    field(EISV, "")
    field(NISV, "")
    field(TESV, "")
    field(ELSV, "")
    field(TVSV, "")
    field(TTSV, "")
    field(FTSV, "")
    field(FFSV, "")

    field(INP,  "$(D):ModMon.VAL[4] CP MSS")
}

record(mbbi, "$(D):ModControlMode-Mon") {
    field(PINI, "NO")
    field(SCAN, "10 second")
    field(PHAS, "0")
    field(DESC, "Module control mode")

    field(ZRST, "Constant Voltage")
    field(ONST, "Constant Current")
    field(TWST, "Constant Pwr")
    field(THST, "Usense limit active")
    field(FRST, "Psense limit active")
    field(FVST, "Current derating active")
    field(SXST, "")
    field(SVST, "")
    field(EIST, "")
    field(NIST, "")
    field(TEST, "")
    field(ELST, "")
    field(TVST, "")
    field(TTST, "")
    field(FTST, "")
    field(FFST, "")

    field(ZRSV, "")
    field(ONSV, "")
    field(TWSV, "")
    field(THSV, "")
    field(FRSV, "")
    field(FVSV, "")
    field(SXSV, "")
    field(SVSV, "")
    field(EISV, "")
    field(NISV, "")
    field(TESV, "")
    field(ELSV, "")
    field(TVSV, "")
    field(TTSV, "")
    field(FTSV, "")
    field(FFSV, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getInt(getModControlMode) $(P)")
}

record(ai, "$(D):ModVoltageRef-Mon"){
    field(PINI, "NO")
    field(SCAN, "60 second")
    field(DESC, "Reference val. for voltage")
    field(EGU,  "V")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getModVoltageRef) $(P)")
}

record(ai, "$(D):ModCurrentRef-Mon"){
    field(PINI, "NO")
    field(SCAN, "60 second")
    field(DESC, "Reference val. for current")
    field(EGU,  "A")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getModCurrentRef) $(P)")
}

record(ai, "$(D):ModResistanceRef-Mon"){
    field(PINI, "NO")
    field(SCAN, "60 second")
    field(DESC, "Reference val. for resistance")
    field(EGU,  "mOhm")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getModResistanceRef) $(P)")
}

record(ai, "$(D):ModPwrRef-Mon"){
    field(PINI, "NO")
    field(SCAN, "60 second")
    field(DESC, "Reference val. for power")
    field(EGU,  "kW")
    field(PREC, "2")
    field(PHAS, "0")
    field(LINR, "NO CONVERSION")
    field(EOFF, "0")
    field(ESLO, "1")
    field(FLNK, "")

    field(DTYP, "stream")
    field(INP,  "@Regatron.proto getFloat(getModPowerRef) $(P)")
}
